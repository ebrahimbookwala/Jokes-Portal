{"version":3,"sources":["components/jokes/AddJoke.js"],"names":["initialValues","author","content","validationSchema","Yup","max","required","AddJoke","history","useHistory","useState","touched","setTouched","loading","setLoading","Fragment","when","message","onSubmit","values","setSubmitting","submitJoke","push","onFocus","htmlFor","name","type","as"],"mappings":"+LAMMA,EAAgB,CACrBC,OAAQ,GACRC,QAAS,IAGJC,EAAmBC,IAAW,CACnCH,OAAQG,MACNC,IAAI,GAAI,iCACRC,SAAS,aACXJ,QAASE,MAAaE,SAAS,cA+CjBC,UA5CC,WACf,IAAMC,EAAUC,cAChB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAeA,OACC,eAAC,IAAMC,SAAP,WACC,cAAC,IAAD,CACCC,KAAML,EACNM,QAAQ,mEAERJ,GAAW,wDACZ,cAAC,IAAD,CACCb,cAAeA,EACfG,iBAAkBA,EAClBe,SAnBc,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cAC3BN,GAAW,GACXF,GAAW,GACXS,YAAWF,GACXC,GAAc,GACdN,GAAW,GACXN,EAAQc,KAAK,WAUZ,SAKC,eAAC,IAAD,CAAMC,QAzBU,WAClBX,GAAW,IAwBT,UACC,uBAAOY,QAAQ,SAAf,oBACA,cAAC,IAAD,CAAOC,KAAK,SAASC,KAAK,SAC1B,cAAC,IAAD,CAAcD,KAAK,WACnB,uBAAOD,QAAQ,UAAf,kBACA,cAAC,IAAD,CAAOC,KAAK,UAAUE,GAAG,aACzB,cAAC,IAAD,CAAcF,KAAK,YACnB,wBAAQC,KAAK,SAAb","file":"static/js/4.14fc9f8e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Prompt, useHistory } from \"react-router-dom\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { submitJoke } from \"../../fetch/fetch\";\r\n\r\nconst initialValues = {\r\n\tauthor: \"\",\r\n\tcontent: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n\tauthor: Yup.string()\r\n\t\t.max(20, \"Must be 20 characters or less\")\r\n\t\t.required(\"Required!\"),\r\n\tcontent: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst AddJoke = () => {\r\n\tconst history = useHistory();\r\n\tconst [touched, setTouched] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst formActive = () => {\r\n\t\tsetTouched(true);\r\n\t};\r\n\r\n\tconst onSubmit = (values, { setSubmitting }) => {\r\n\t\tsetLoading(true);\r\n\t\tsetTouched(false);\r\n\t\tsubmitJoke(values);\r\n\t\tsetSubmitting(false);\r\n\t\tsetLoading(false);\r\n\t\thistory.push(\"/jokes\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Prompt\r\n\t\t\t\twhen={touched}\r\n\t\t\t\tmessage=\"Are you sure you want to leave the page. Nothing will be saved\"\r\n\t\t\t/>\r\n\t\t\t{loading && <p>Joke is being submitted</p>}\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={initialValues}\r\n\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t>\r\n\t\t\t\t<Form onFocus={formActive}>\r\n\t\t\t\t\t<label htmlFor=\"author\">Author</label>\r\n\t\t\t\t\t<Field name=\"author\" type=\"text\" />\r\n\t\t\t\t\t<ErrorMessage name=\"author\" />\r\n\t\t\t\t\t<label htmlFor=\"content\">Joke</label>\r\n\t\t\t\t\t<Field name=\"content\" as=\"textarea\" />\r\n\t\t\t\t\t<ErrorMessage name=\"content\" />\r\n\t\t\t\t\t<button type=\"submit\">Add Joke</button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default AddJoke;\r\n"],"sourceRoot":""}